@using eShopSolution.Application.DTO;
@using eShopSolution.ViewModel.Common;
@model PageResult<eShopSolution.ViewModel.System.Users.UserViewModel>

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="content-body">

    <div class="row page-titles mx-0">
        <div class="col p-md-0">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="javascript:void(0)">Dashboard</a></li>
                <li class="breadcrumb-item active"><a href="javascript:void(0)">Home</a></li>
            </ol>
        </div>
    </div>
    <!-- row -->

    <div class="container-fluid">
        <div class="col-lg-12">
            <div class="card">
               @*  @if (ViewBag.Success ==true)
                {
                    <button type="button" class="btn btn-success m-b-10 m-l-5" id="toastr-success-top-right">Success</button>
                } *@
                <div class="card-body">
                    <h4 class="card-title">Basic Table</h4>
                    <div class="table-responsive">
                        <table class="table header-border">
                            <thead>
                                <tr>
                                    <th scope="col">
                                        Username
                                    </th>
                                    <th scope="col">
                                        Firstname
                                    </th>
                                    <th scope="col">
                                        Lastname
                                    </th>
                                    <th scope="col">
                                        Email
                                    </th>
                                    <th scope="col">
                                        Phonenumber
                                    </th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Username)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Firstname)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Lastname)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Email)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Phonenumber)
                                        </td>
                                        <td>
                                            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                                            @Html.ActionLink("Detail", "Detail", new { id=item.Id })
                                            @* @Html.ActionLink("Delete","Delete",new{id=item.Id},
                                                new {
                                                    id=item.Id,
                                                    onclick="ConfirmDelete("+item.Id+")"
                                                })  *@
                                                <a href="#" onclick="Delete()">Delete</a>
                                             @*    @await Component.InvokeAsync("Modal",Model); *@
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    @await Component.InvokeAsync("Pager",Model)
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
<script type="text/javascript">
   
</script>
}